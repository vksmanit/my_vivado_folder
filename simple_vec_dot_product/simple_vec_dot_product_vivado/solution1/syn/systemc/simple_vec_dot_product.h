// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _simple_vec_dot_product_HH_
#define _simple_vec_dot_product_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "simple_vec_dot_product_mul_32s_32s_64_6.h"

namespace ap_rtl {

struct simple_vec_dot_product : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<32> > a_q0;
    sc_out< sc_lv<2> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<32> > b_q0;
    sc_out< sc_lv<2> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<32> > out_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    simple_vec_dot_product(sc_module_name name);
    SC_HAS_PROCESS(simple_vec_dot_product);

    ~simple_vec_dot_product();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    simple_vec_dot_product_mul_32s_32s_64_6<1,6,32,32,64>* simple_vec_dot_product_mul_32s_32s_64_6_U1;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_24;
    sc_signal< sc_lv<3> > i0_1_fu_91_p2;
    sc_signal< sc_lv<3> > i0_1_reg_165;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_57;
    sc_signal< sc_lv<64> > tmp_fu_97_p1;
    sc_signal< sc_lv<64> > tmp_reg_170;
    sc_signal< sc_lv<1> > exitcond_fu_85_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_76;
    sc_signal< sc_lv<64> > grp_fu_111_p2;
    sc_signal< sc_lv<64> > i1_reg_195;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_87;
    sc_signal< sc_lv<1> > icmp_fu_127_p2;
    sc_signal< sc_lv<1> > icmp_reg_201;
    sc_signal< sc_lv<3> > i0_reg_74;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_102;
    sc_signal< sc_lv<33> > tmp_4_fu_117_p4;
    sc_signal< sc_lv<1> > tmp_5_fu_133_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_148_p2;
    sc_signal< sc_lv<32> > phitmp_fu_141_p3;
    sc_signal< sc_lv<32> > tmp_6_fu_138_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_st1_fsm_0;
    static const sc_lv<9> ap_ST_st2_fsm_1;
    static const sc_lv<9> ap_ST_st3_fsm_2;
    static const sc_lv<9> ap_ST_st4_fsm_3;
    static const sc_lv<9> ap_ST_st5_fsm_4;
    static const sc_lv<9> ap_ST_st6_fsm_5;
    static const sc_lv<9> ap_ST_st7_fsm_6;
    static const sc_lv<9> ap_ST_st8_fsm_7;
    static const sc_lv<9> ap_ST_st9_fsm_8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<33> ap_const_lv33_0;
    static const sc_lv<64> ap_const_lv64_FFFFFFFF80000000;
    static const sc_lv<32> ap_const_lv32_7FFFFFFF;
    static const sc_lv<32> ap_const_lv32_80000000;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_102();
    void thread_ap_sig_24();
    void thread_ap_sig_57();
    void thread_ap_sig_76();
    void thread_ap_sig_87();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_exitcond_fu_85_p2();
    void thread_i0_1_fu_91_p2();
    void thread_icmp_fu_127_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_phitmp_fu_141_p3();
    void thread_tmp_3_fu_148_p2();
    void thread_tmp_4_fu_117_p4();
    void thread_tmp_5_fu_133_p2();
    void thread_tmp_6_fu_138_p1();
    void thread_tmp_fu_97_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
